// shadertype=glsl
#version 400

layout(vertices = 4) out;
uniform int defaultTessLevel;
uniform int maxTessLevel;
uniform vec4 cameraVector;
uniform float gridSizeMax;

void main()
{
	float tessLevel = defaultTessLevel;

	float distance = abs(distance(gl_in[gl_InvocationID].gl_Position.xyzw, cameraVector.xyzw)); 
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

	tessLevel = ((distance - 0) * 1.5 / ((2 * gridSizeMax / 3) - 0)) * (defaultTessLevel - maxTessLevel) + maxTessLevel;
	tessLevel = min(maxTessLevel, max(defaultTessLevel, tessLevel));

	gl_TessLevelOuter[0] = tessLevel;
	gl_TessLevelOuter[1] = tessLevel;
	gl_TessLevelOuter[2] = tessLevel;
	gl_TessLevelOuter[3] = tessLevel;
	gl_TessLevelInner[0] = tessLevel;
	gl_TessLevelInner[1] = tessLevel;
}